<!-- タイトルを動的に出力するためにタイトル(Home)を入力 -->
<% provide(:title, "使い方") %>

  <div align="center">
    <font size="5">使い方<br><br></font>
  </div>

  <div class="usage-main">
    <font size="4">
      <div align="left">文章について</div><br>

      このサイトでは、1つの数学の手法について大きく3章立てで説明していきます。<br><br>
      1章（はじめに）では、実際にどのようにしてその数学の手法が使われているのかを紹介しています.<br>
      2章では、その数学の手法の原理や特徴を説明しています.<br>
      3章（実際にやってみよう）では、問題を解くことで1章や2章で説明したことを実感してもらうことを意図しています.<br><br>

      <br><br>
      <div align="left">グラフについて</div><br>

      <canvas id="canvas1" width="400" height="300"></canvas>
      <script type="text/javascript">

        if(window.name != "usage") {
          location.reload();
          window.name = "usage";
        }
        // canvas要素のDOMオブジェクトを取得
        var canvas = document.getElementById("canvas1");
        // 描画コンテキストを取得する
        var context = canvas.getContext("2d");
        var mouseX = 0;
        var mouseY = 0;

        function movehandler(event) {
          mouseX = event.offsetX;
          mouseY = event.offsetY;
          inclination = mouseX / mouseY
        }
        window.onmousemove = movehandler;

        function sum(n, m) {
          return n + m;
        }

        function draw() {
          // letは変数のスコープをブロックに限定する。
          let str;

          context.fillStyle = "rgb(255, 255, 255)";
          context.fillRect(0, 0, canvas.width, canvas.height);

          context.fillStyle = "rgb(0, 0, 0)";

          str1 = "y = " + inclination + " x"
          context.fillText(str1, mouseX + 10, mouseY - 10);

          context.fillStyle = "rgb(200, 0, 0)";
          // beginPathメソッドを呼び出すことで、描画コンテキストへのパスの記録が開始され、図形を書くことができる。
          context.beginPath();
          // moveToメソッドによって、指定した点まで移動する。
          context.moveTo(0, canvas.height);
          // 現在の点から指定した点までの線分を定義する。
          context.lineTo(mouseX, mouseY);

          context.moveTo(0, canvas.height);
          context.lineTo(canvas.width, canvas.height);

          context.moveTo(0, canvas.height);
          context.lineTo(0, 0);
          // strokeメソッドで描画コンテキストに記録されたパスをCanvasに描画
          context.stroke();
        }

        setInterval(draw, 30);
      </script>
      （傾きが変）

      <br><br>（こんな感じでプログラムでインタラクティブなグラフ作って、それに関する使い方・説明を入れたい）<br><br>

      <br><br>
      <div align="left">解答欄について</div><br>

      3章（実際にやってみよう）では、以下のような解答欄があります。<br>
      選択肢から1つ選んでクリックすると、その選択肢が正解か不正解かが表示されます。<br><br>

      <div style="display:inline-block; background:#fcfcff; padding:15px; border:1px solid #3b5998; border-radius:10px; word-break:break-all;">
        <input id="Radio1" name="RadioGroup1" type="radio" onchange="onRadioButtonChange1();">
        <label for="Radio1">$2x$</label>&emsp;
        <input id="Radio2" name="RadioGroup1" type="radio" onchange="onRadioButtonChange1();">
        <label for="Radio2">$2x-3$</label>&emsp;
        <input id="Radio3" name="RadioGroup1" type="radio" onchange="onRadioButtonChange1();">
        <label for="Radio3">$x$</label>
      <div id="output1">結果：</div>
      </div>

      <br><br>（今後、選択肢をクリックしてもすぐには正解・不正解かを表示せず、複数の問題の選択肢を1つのボタンで正解・不正解を一斉に表示できるようにします）<br>

    </font>
  </div>

  <br><br><br><br><br><br>

  <script language="JavaScript">
    if (window.name != "usage") {
      window.name = "usage";
    }

    function onRadioButtonChange1() {
      radiobtn1 = document.getElementById("Radio1");
      radiobtn2 = document.getElementById("Radio2");
      radiobtn3 = document.getElementById("Radio3");

      target = document.getElementById("output1");

      if (radiobtn1.checked == true) {
        target.innerHTML = "結果：おめでとう、正解です";
      } else if (radiobtn2.checked == true) {
        target.innerHTML = "結果：残念、不正解です";
      } else if (radiobtn3.checked == true) {
        target.innerHTML = "結果：残念、不正解です";
      }
    }
  </script>
